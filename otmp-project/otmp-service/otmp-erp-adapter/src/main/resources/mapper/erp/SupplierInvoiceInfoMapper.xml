<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lenovo.otmp.erp.mapper.SupplierInvoiceInfoMapper">

  <resultMap id="S4ApiItemResultMap" type="com.lenovo.otmp.erp.domain.S4ApiItem" >
    <result column="id" property="id" jdbcType="BIGINT" />
    <result column="record_count" property="recordCount" jdbcType="VARCHAR" />
    <result column="company_code" property="companyCode" jdbcType="VARCHAR" />
    <result column="vendor_code" property="vendorCode" jdbcType="VARCHAR" />
    <result column="request_start_date" property="requestStartDate" jdbcType="VARCHAR" />
    <result column="request_end_date" property="requestEndDate" jdbcType="VARCHAR" />
    <result column="invoice_count" property="invoiceCount" jdbcType="VARCHAR" />
    <result column="total_invoice_amount" property="totalInvoiceAmount" jdbcType="VARCHAR" />
    <result column="credit_note_count" property="creditNoteCount" jdbcType="VARCHAR" />
    <result column="total_credit_note_amount" property="totalCreditNoteAmount" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="PayCycleCalendarConfigResultMap" type="com.lenovo.otmp.erp.domain.PayCycleCalendarConfig" >
    <result column="zyear" property="zyear" jdbcType="VARCHAR" />
    <result column="zmonth" property="zmonth" jdbcType="VARCHAR" />
    <result column="first_week" property="firstWeek" jdbcType="VARCHAR" />
    <result column="second_week" property="secondWeek" jdbcType="VARCHAR" />
    <result column="third_week" property="thirdWeek" jdbcType="VARCHAR" />
    <result column="fourth_week" property="fourthWeek" jdbcType="VARCHAR" />
    <result column="country" property="country" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="SupplierCalendarResultMap" type="com.lenovo.otmp.erp.domain.SupplierCalendarConfig" >
    <result column="payment_cycle" property="paymentCycle" jdbcType="VARCHAR" />
    <result column="week_of_the_month" property="weekOfTheMonth" jdbcType="VARCHAR" />
    <result column="basis_of_maturity_date_calculation" property="basisOfMaturityDateCalculation" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="SupplierInvoiceInfoResultMap" type="com.lenovo.otmp.erp.domain.SupplierInvoiceInfo" >
    <result column="id" property="id" jdbcType="BIGINT" />
    <result column="invoice_unique_id" property="invoiceUniqueId" jdbcType="VARCHAR" />
    <result column="company_code" property="companyCode" jdbcType="VARCHAR" />
    <result column="vendor_code" property="vendorCode" jdbcType="VARCHAR" />
    <result column="fiscal_year" property="fiscalYear" jdbcType="VARCHAR" />
    <result column="invoice_reference" property="invoiceReference" jdbcType="VARCHAR" />
    <result column="invoice_additional_reference" property="invoiceAdditionalReference" jdbcType="VARCHAR" />
    <result column="ecc_invoice_number" property="eccInvoiceNumber" jdbcType="VARCHAR" />
    <result column="invoice_due_date" property="invoiceIssueDate" jdbcType="VARCHAR" />
    <result column="invoice_baseline_date" property="invoiceBaselineDate" jdbcType="VARCHAR" />
    <result column="invoice_due_date" property="invoiceDueDate" jdbcType="VARCHAR" />
    <result column="invoice_currency" property="invoiceCurrency" jdbcType="VARCHAR" />
    <result column="invoice_amount" property="invoiceAmount" jdbcType="NUMERIC" />
    <result column="type_of_billing" property="typeOfBilling" jdbcType="VARCHAR" />
    <result column="enter_date" property="enterDate" jdbcType="VARCHAR" />
    <result column="invoice_pay_date" property="invoicePayDate" jdbcType="VARCHAR" />
    <result column="invoice_type" property="typeOfInvoice" jdbcType="VARCHAR" />
    <result column="maturity_date" property="maturityDate" jdbcType="DATE" />
  </resultMap>

  <insert id="insertBatch">
    <foreach collection="list" item="item">
      insert into "otfp_financing"."invoice_ap"
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.id != null">
          id,
        </if>
        <if test="item.invoiceUniqueId != null">
          invoice_unique_id,
        </if>
        <if test="item.companyCode != null">
          company_code,
        </if>
        <if test="item.vendorCode != null">
          vendor_code,
        </if>
        <if test="item.fiscalYear != null">
          fiscal_year,
        </if>
        <if test="item.invoiceReference != null">
          invoice_reference,
        </if>
        <if test="item.invoiceAdditionalReference != null">
          invoice_additional_reference,
        </if>
        <if test="item.eccInvoiceNumber != null">
          ecc_invoice_number,
        </if>
        <if test="item.invoiceIssueDate != null">
          invoice_issue_date,
        </if>
        <if test="item.invoiceBaselineDate != null">
          invoice_baseline_date,
        </if>
        <if test="item.invoiceDueDate != null">
          invoice_due_date,
        </if>
        <if test="item.invoiceCurrency != null">
          invoice_currency,
        </if>
        <if test="item.invoiceAmount != null">
          invoice_amount,
        </if>
        <if test="item.typeOfBilling != null">
          type_of_billing,
        </if>
        <if test="item.invoiceEntryDate != null">
          enter_date,
        </if>
        <if test="item.typeOfInvoice != null">
          invoice_type,
        </if>
        <if test="item.invoicePayDate != null">
          invoice_pay_date,
        </if>
        <if test="item.crateTime != null">
          create_time,
        </if>
      </trim>
      <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="item.id != null">
          #{item.id,jdbcType=BIGINT},
        </if>
        <if test="item.invoiceUniqueId != null">
          #{item.invoiceUniqueId,jdbcType=VARCHAR},
        </if>
        <if test="item.companyCode != null">
          #{item.companyCode,jdbcType=VARCHAR},
        </if>
        <if test="item.vendorCode != null">
          #{item.vendorCode,jdbcType=VARCHAR},
        </if>
        <if test="item.fiscalYear != null">
          #{item.fiscalYear,jdbcType=VARCHAR},
        </if>
        <if test="item.invoiceReference != null">
          #{item.invoiceReference,jdbcType=VARCHAR},
        </if>
        <if test="item.invoiceAdditionalReference != null">
          #{item.invoiceAdditionalReference,jdbcType=VARCHAR},
        </if>
        <if test="item.eccInvoiceNumber != null">
          #{item.eccInvoiceNumber,jdbcType=NUMERIC},
        </if>
        <if test="item.invoiceIssueDate != null">
          #{item.invoiceIssueDate,jdbcType=VARCHAR},
        </if>
        <if test="item.invoiceBaselineDate != null">
          #{item.invoiceBaselineDate,jdbcType=VARCHAR},
        </if>
        <if test="item.invoiceDueDate != null">
          #{item.invoiceDueDate,jdbcType=VARCHAR},
        </if>
        <if test="item.invoiceCurrency != null">
          #{item.invoiceCurrency,jdbcType=VARCHAR},
        </if>
        <if test="item.invoiceAmount != null">
          #{item.invoiceAmount,jdbcType=NUMERIC},
        </if>
        <if test="item.typeOfBilling != null">
          #{item.typeOfBilling,jdbcType=VARCHAR},
        </if>
        <if test="item.invoiceEntryDate != null">
          #{item.invoiceEntryDate,jdbcType=VARCHAR},
        </if>
        <if test="item.typeOfInvoice != null">
          #{item.typeOfInvoice,jdbcType=VARCHAR},
        </if>
        <if test="item.invoicePayDate != null">
          #{item.invoicePayDate,jdbcType=VARCHAR},
        </if>
        <if test="item.crateTime != null">
          #{item.crateTime},
        </if>
      </trim>
      ;
    </foreach>
  </insert>

  <insert id="saveBatchItem">
    <foreach collection="list" item="item">
      insert into "otfp_financing"."invoice_feed"
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.id != null">
          id,
        </if>
        <if test="item.recordCount != null">
          record_count,
        </if>
        <if test="item.companyCode != null">
          company_code,
        </if>
        <if test="item.vendorCode != null">
          vendor_code,
        </if>
        <if test="item.requestStartDate != null">
          request_start_date,
        </if>
        <if test="item.requestEndDate != null">
          request_end_date,
        </if>
        <if test="item.invoiceCount != null">
          invoice_count,
        </if>
        <if test="item.totalInvoiceAmount != null">
          total_invoice_amount,
        </if>
        <if test="item.creditNoteCount != null">
          credit_note_count,
        </if>
        <if test="item.totalCreditNoteAmount != null">
          total_credit_note_amount,
        </if>
        status,
        create_time
      </trim>
      <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="item.id != null">
          #{item.id,jdbcType=BIGINT},
        </if>
        <if test="item.recordCount != null">
          #{item.recordCount,jdbcType=VARCHAR},
        </if>
        <if test="item.companyCode != null">
          #{item.companyCode,jdbcType=VARCHAR},
        </if>
        <if test="item.vendorCode != null">
          #{item.vendorCode,jdbcType=VARCHAR},
        </if>
        <if test="item.requestStartDate != null">
          #{item.requestStartDate,jdbcType=VARCHAR},
        </if>
        <if test="item.requestEndDate != null">
          #{item.requestEndDate,jdbcType=VARCHAR},
        </if>
        <if test="item.invoiceCount != null">
          #{item.invoiceCount,jdbcType=VARCHAR},
        </if>
        <if test="item.totalInvoiceAmount != null">
          #{item.totalInvoiceAmount,jdbcType=VARCHAR},
        </if>
        <if test="item.creditNoteCount != null">
          #{item.creditNoteCount,jdbcType=VARCHAR},
        </if>
        <if test="item.totalCreditNoteAmount != null">
          #{item.totalCreditNoteAmount,jdbcType=VARCHAR},
        </if>
        '0',
        now()
      </trim>
      ON CONFLICT ("company_code", "vendor_code", "request_start_date", "request_end_date") DO UPDATE
      set
      <if test="item.invoiceCount != null and item.invoiceCount !='0' ">
        invoice_count =  #{item.invoiceCount,jdbcType=VARCHAR},
      </if>
      <if test="item.totalInvoiceAmount != null and item.totalInvoiceAmount !='0' ">
        total_invoice_amount = #{item.totalInvoiceAmount,jdbcType=VARCHAR},
      </if>
      <if test="item.recordCount != null and item.recordCount !='0' ">
        record_count = #{item.recordCount,jdbcType=VARCHAR},
      </if>
      <if test="item.creditNoteCount != null and item.creditNoteCount !='0' ">
        credit_note_count =  #{item.creditNoteCount,jdbcType=VARCHAR},
      </if>
      <if test="item.totalCreditNoteAmount != null and item.totalCreditNoteAmount !='0' ">
        total_credit_note_amount = #{item.totalCreditNoteAmount,jdbcType=VARCHAR},
      </if>
      status = '0',
      update_time = now()
      ;
    </foreach>
  </insert>

  <select id="searchS4ApiItem" resultMap="S4ApiItemResultMap">
    select DISTINCT f.* from "otfp_financing"."invoice_feed" f
    join otfp_financing.supplier_unique s on f.vendor_code = s.supplier_code
    where status = '0' and (invoice_count &gt; '0' OR credit_note_count &gt; '0')
  </select>

  <select id="findPayCycleCalendarConfig" resultMap="PayCycleCalendarConfigResultMap">
    select pay.zyear,pay.zmonth,pay.first_week,pay.second_week,pay.third_week,pay.fourth_week,pay.country
    FROM otfp_base.pay_cycle_calendar_config pay
    WHERE (pay.country = 'HK' or pay.country = '')
  </select>

  <insert id="insertFinalBatch">
    <foreach collection="list" item="item">
      insert into "otfp_financing"."finance_invoice_ap"
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.id != null">
          id,
        </if>
        <if test="item.invoiceUniqueId != null">
          invoice_unique_id,
        </if>
        <if test="item.companyCode != null">
          company_code,
        </if>
        <if test="item.vendorCode != null">
          vendor_code,
        </if>
        <if test="item.fiscalYear != null">
          fiscal_year,
        </if>
        <if test="item.invoiceReference != null">
          invoice_reference,
        </if>
        <if test="item.invoiceAdditionalReference != null">
          invoice_additional_reference,
        </if>
        <if test="item.eccInvoiceNumber != null">
          ecc_invoice_number,
        </if>
        <if test="item.invoiceIssueDate != null">
          invoice_issue_date,
        </if>
        <if test="item.invoiceBaselineDate != null">
          invoice_baseline_date,
        </if>
        <if test="item.invoiceDueDate != null">
          invoice_due_date,
        </if>
        <if test="item.invoiceCurrency != null">
          invoice_currency,
        </if>
        <if test="item.invoiceAmount != null">
          invoice_amount,
        </if>
        <if test="item.typeOfBilling != null">
          type_of_billing,
        </if>
        <if test="item.invoiceEntryDate != null">
          enter_date,
        </if>
        <if test="item.typeOfInvoice != null">
          invoice_type,
        </if>
        <if test="item.maturityDate != null">
          maturity_date,
        </if>
        <if test="item.invoicePayDate != null">
          invoice_pay_date,
        </if>
        <if test="item.status != null">
          status,
        </if>
        <if test="item.crateTime != null">
          create_time,
        </if>
        <if test="item.maturityDate != null">
          confirmed_maturity_date,
        </if>
      </trim>
      <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="item.id != null">
          #{item.id,jdbcType=BIGINT},
        </if>
        <if test="item.invoiceUniqueId != null">
          #{item.invoiceUniqueId,jdbcType=VARCHAR},
        </if>
        <if test="item.companyCode != null">
          #{item.companyCode,jdbcType=VARCHAR},
        </if>
        <if test="item.vendorCode != null">
          #{item.vendorCode,jdbcType=VARCHAR},
        </if>
        <if test="item.fiscalYear != null">
          #{item.fiscalYear,jdbcType=VARCHAR},
        </if>
        <if test="item.invoiceReference != null">
          #{item.invoiceReference,jdbcType=VARCHAR},
        </if>
        <if test="item.invoiceAdditionalReference != null">
          #{item.invoiceAdditionalReference,jdbcType=VARCHAR},
        </if>
        <if test="item.eccInvoiceNumber != null">
          #{item.eccInvoiceNumber,jdbcType=NUMERIC},
        </if>
        <if test="item.invoiceIssueDate != null">
          #{item.invoiceIssueDate,jdbcType=VARCHAR},
        </if>
        <if test="item.invoiceBaselineDate != null">
          #{item.invoiceBaselineDate,jdbcType=VARCHAR},
        </if>
        <if test="item.invoiceDueDate != null">
          #{item.invoiceDueDate,jdbcType=VARCHAR},
        </if>
        <if test="item.invoiceCurrency != null">
          #{item.invoiceCurrency,jdbcType=VARCHAR},
        </if>
        <if test="item.invoiceAmount != null">
          #{item.invoiceAmount,jdbcType=NUMERIC},
        </if>
        <if test="item.typeOfBilling != null">
          #{item.typeOfBilling,jdbcType=VARCHAR},
        </if>
        <if test="item.invoiceEntryDate != null">
          #{item.invoiceEntryDate,jdbcType=VARCHAR},
        </if>
        <if test="item.typeOfInvoice != null">
          #{item.typeOfInvoice,jdbcType=VARCHAR},
        </if>
        <if test="item.maturityDate != null">
          #{item.maturityDate},
        </if>
        <if test="item.invoicePayDate != null">
          #{item.invoicePayDate,jdbcType=VARCHAR},
        </if>
        <if test="item.status != null">
          #{item.status,jdbcType=VARCHAR},
        </if>
        <if test="item.crateTime != null">
          #{item.crateTime},
        </if>
        <if test="item.maturityDate != null">
          #{item.maturityDate},
        </if>
      </trim>
      ON CONFLICT (invoice_unique_id) DO UPDATE
      set
      company_code = #{item.companyCode,jdbcType=VARCHAR},
      vendor_code = #{item.vendorCode,jdbcType=VARCHAR},
      fiscal_year = #{item.fiscalYear,jdbcType=VARCHAR},
      invoice_reference = #{item.invoiceReference,jdbcType=VARCHAR},
      invoice_additional_reference = #{item.invoiceAdditionalReference,jdbcType=VARCHAR},
      ecc_invoice_number = #{item.eccInvoiceNumber,jdbcType=NUMERIC},
      invoice_issue_date = #{item.invoiceIssueDate,jdbcType=VARCHAR},
      invoice_baseline_date = #{item.invoiceBaselineDate,jdbcType=VARCHAR},
      invoice_due_date = #{item.invoiceDueDate,jdbcType=VARCHAR},
      invoice_currency = #{item.invoiceCurrency,jdbcType=VARCHAR},
      invoice_amount = #{item.invoiceAmount,jdbcType=NUMERIC},
      type_of_billing = #{item.typeOfBilling,jdbcType=VARCHAR},
      enter_date = #{item.invoiceEntryDate,jdbcType=VARCHAR},
      invoice_type = #{item.typeOfInvoice,jdbcType=VARCHAR},
      invoice_pay_date = #{item.invoicePayDate,jdbcType=VARCHAR},
      status = #{item.status,jdbcType=VARCHAR},
      update_time = now()
      ;
    </foreach>
  </insert>

  <select id="findTenorDate" resultType="String">
    select DISTINCT maximum_invoice_tenor from otfp_financing.supplier_bank_setting ss
    join otfp_financing.supplier_unique s on ss.supplier_id = s.supplier_id
    where s.supplier_code = #{supplierCode,jdbcType=VARCHAR}
  </select>

  <select id="findInvoiceReference" resultType="String">
    select DISTINCT invoice_reference from "otfp_financing"."finance_invoice_ap"
    where
    status &lt;&gt; 'Invalid'
    and vendor_code in (
    SELECT DISTINCT t.supplier_code from "otfp_financing"."supplier_unique" as t
    WHERE
    t.supplier_id = (SELECT DISTINCT supplier_id from "otfp_financing"."supplier_unique" WHERE supplier_code = #{supplierCode,jdbcType=VARCHAR}
    and delete_flag = '0'
    )
    and t.delete_flag = '0'
    )
  </select>

  <select id="findSupplierCalendarConfig" resultMap="SupplierCalendarResultMap">
    select distinct s.payment_cycle,s.week_of_the_month,s.basis_of_maturity_date_calculation
    from
    otfp_financing.supplier s
    join
    otfp_financing.supplier_unique su on su.supplier_id = s.id
    where s.delete_flag = '0' and  su.delete_flag = '0' and su.supplier_code = #{supplierCode,jdbcType=VARCHAR}
  </select>

  <select id="findExpiredData" resultMap="SupplierInvoiceInfoResultMap">
    select DISTINCT fa.* from otfp_financing.finance_invoice_ap fa
    join otfp_financing.supplier_unique su on fa.vendor_code = su.supplier_code
    join otfp_financing.supplier s on su.supplier_id = s.id
    where fa.maturity_date is not null
    and fa.status = 'Waiting'
    and fa.invoice_type = 'Debit Memo'
    and date_part('day', to_timestamp(fa.invoice_pay_date, 'yyyymmdd') - #{date})  &lt; s.invalid_days_before_maturity_date
  </select>

  <delete id="deleteExpiredData">
    delete from otfp_financing.finance_invoice_ap where invoice_unique_id in
    <foreach collection="list" separator="," close=")" open="(" item="item">
      #{item.invoiceUniqueId}
    </foreach>
  </delete>

  <update id="updateFeedStatus">
    update otfp_financing.invoice_feed set status = '1'
    where id in
    <foreach collection="list" separator="," close=")" open="(" item="item">
      #{item.id}
    </foreach>
  </update>

  <update id="updateSupplierStatus">
    <foreach collection="list" item="item">
      update otfp_financing.invoice_ap set status = #{item.status}
      ,status_description = #{item.statusDescription}
      ,maturity_date = #{item.maturityDate}
      ,update_time = #{item.updateTime}
      where invoice_unique_id = #{item.invoiceUniqueId};
    </foreach>
  </update>

  <update id="updateSupplierStatusBatch">
    UPDATE otfp_financing.invoice_ap
    SET status = #{status}
      ,status_description = #{statusDesc}
      ,maturity_date = #{maturityDate}
      ,update_time = #{updateTime}
    WHERE EXISTS (
      SELECT 1 from (
        VALUES
        <foreach collection="list" item="item" separator=",">
          (#{item.invoiceUniqueId})
        </foreach>
      )
      AS tmp(invoice_unique_id)
      WHERE tmp.invoice_unique_id = invoice_ap.invoice_unique_id
    )
  </update>

  <update id="updateFinalSupplierStatus">
    <foreach collection="list" item="item">
      update otfp_financing.finance_invoice_ap set status = #{item.status},status_description = #{item.statusDescription},update_time = #{item.updateTime}
      where invoice_unique_id = #{item.invoiceUniqueId};
    </foreach>
  </update>

  <update id="updateFinalSupplierStatusBatch">
    UPDATE otfp_financing.finance_invoice_ap
    SET status = #{status}
      ,status_description = #{statusDesc}
      ,update_time = #{updateTime}
    WHERE EXISTS (
      SELECT 1 from (
      VALUES
        <foreach collection="list" item="item" separator=",">
          (#{item.invoiceUniqueId})
        </foreach>
        ) AS tmp(invoice_unique_id)
      WHERE tmp.invoice_unique_id = finance_invoice_ap.invoice_unique_id
    )
  </update>

  <select id="findCurrency" resultType="String">
    SELECT distinct currency  from "otfp_financing"."supplier_bank_setting" sbs
    join "otfp_financing"."supplier_unique" su on sbs.supplier_id = su.supplier_id
    WHERE su.delete_flag = '0' and su.supplier_code = #{supplierCode,jdbcType=VARCHAR}
  </select>

  <update id="updateExpiredDataStatus">
    <foreach collection="list" item="item">
      update otfp_financing.finance_invoice_ap set status = #{item.status}
      ,status_description = #{item.statusDescription}
      ,update_time = now()
      where invoice_unique_id = #{item.invoiceUniqueId};
    </foreach>
  </update>

  <select id="findSuppliersByIds" resultMap="SupplierInvoiceInfoResultMap">
    select * from otfp_financing.finance_invoice_ap
    where id in
    <foreach collection="list" item="id" separator="," open="(" close=")">
       #{id}
    </foreach>
  </select>

  <select id="findSuppliersByBatchNumbers" resultMap="SupplierInvoiceInfoResultMap">
    select * from otfp_financing.finance_invoice_ap
    where id in
    (select DISTINCT invoice_id from "otfp_financing"."finance_batch_invoice"
    where batch_number in
    <foreach collection="list" item="id" separator="," open="(" close=")">
      #{id}
    </foreach>
    )
  </select>

  <select id="findInvoiceData" resultMap="SupplierInvoiceInfoResultMap">
    select * from otfp_financing.finance_invoice_ap
    where status = 'Waiting'
    and invoice_unique_id in
    <foreach collection="list" item="id" separator="," open="(" close=")">
      #{id}
    </foreach>
  </select>

</mapper>